fetchMovies: async (query) => {
  const endpoint = query
    ? `${TMDB_CONFIG.BASE_URL}/${query}`
    : TMDB_CONFIG.BASE_URL;

  set({ loading: true, error: null });

  try {
    const res = await fetch(endpoint);
    const data = await res.json();
    const moviesData = data.data as Movie[];

    set({ movies: moviesData, loading: false });
  } catch (error: any) {
    set({
      loading: false,
      error: error?.message || "Unknown fetch error",
      movies: [],
    });
  }
},

searchMovies: async (query, search) => {
  const endpoint = `${TMDB_CONFIG.BASE_URL}/${query}`;

  set({ loading: true, error: null });

  try {
    const res = await fetch(endpoint);
    const data = await res.json();
    const moviesData = data.data as Movie[];

    const lower = search.toLowerCase();
    const filtered = moviesData.filter((movie) => {
      const nameMatch = movie.name?.toLowerCase().includes(lower);
      const castMatch =
        Array.isArray(movie.casts) &&
        movie.casts.some((item) =>
          item?.cast?.name?.toLowerCase().includes(lower)
        );

      return nameMatch || castMatch;
    });

    set({ searchResults: filtered, loading: false });
  } catch (error: any) {
    set({
      loading: false,
      error: error?.message || "Unknown search error",
      searchResults: [],
    });
  }
},
